question,description,order
On what chains are the smart contracts going to be deployed?,"e.g. Ethereum, Arbitrum, Base, or any EVM-compatible network",1
"If you are integrating tokens, are you allowing only whitelisted tokens to work with the codebase or any complying with the standard? Are they assumed to have certain properties, e.g. be non-reentrant? Are there any types of [weird tokens](https://github.com/d-xo/weird-erc20) you want to integrate?","Please specify the token standards, whether you want to use only certain implementations or any tokens, and what weird traits can these tokens have. Also, feel free to provide examples of the tokens you intend to use. Please make sure they do not exhibit any [weird traits](https://github.com/d-xo/weird-erc20).",2
"Are the admins of the protocols your contracts integrate with (if any) TRUSTED or RESTRICTED? If these integrations are trusted, should auditors also assume they are always responsive, for example, are oracles trusted to provide non-stale information, or VRF providers to respond within a designated timeframe?","Please specify the exact role names used for admin purposes, as well as whether they are fully trusted or not. If not, list the impacts the admin can have on the codebase and how the admin must not be able to impact the code. For example: ""The admin (`owner`) of protocol XYZ is restricted, they can turn the fee on and off, but they mustn't be able to execute any other privileged action, especially steal any funds or break the codebase functionality.""",3
"Are there any protocol roles? Please list them and provide whether they are TRUSTED or RESTRICTED, or provide a more comprehensive description of what a role can and can't do/impact.","Provide whether every role (or whitelisted address(es), like addresses in the merkle tree, or the fee recipient) is trusted or restricted, and list the name of the role in the contract. If the role is restricted, make sure to list all limitations and permissions a role should have.",4
"For permissioned functions, please list all checks and requirements that will be made before calling the function.","Please be precise about your answer and list all, even obvious checks. If these checks are insufficient for the safe functioning of the system, we will raise it as an issue for you. Please provide any situations in which functions will not be used.",5
Is the codebase expected to comply with any EIPs? Can there be/are there any deviations from the specification?,"Please divide the EIPs you implement into two categories: strictly compliant and optionally compliant. Any discrepancies from the specification will be raised if the implementation is to be strictly compliant. In the case of optionally compliant implementations, we won't raise an issue unless it will have implications in the usage of the contracts beyond being non-compliant.",6
"Are there any off-chain mechanisms or off-chain procedures for the protocol (keeper bots, arbitrage bots, etc.)?",Please also describe all acceptable and unacceptable arbitrage strategies based on the protocol.,7
Are there any hardcoded values that you intend to change before (some) deployments?,,8
"If the codebase is to be deployed on an L2, what should be the behavior of the protocol in case of sequencer issues (if applicable)? Should Sherlock assume that the Sequencer won't misbehave, including going offline?",,9
"Should potential issues, like broken assumptions about function behavior, be reported if they could pose risks in future integrations, even if they might not be an issue in the context of the scope? If yes, can you elaborate on properties/invariants that should hold?","For example, if some read function can be manipulated to return a false value (and would work well off-chain), but it can make an integration be exploited, would you want to have this issue reported?",10
Please discuss any design choices you made.,"For example: ""We chose to ignore fees in some calculations because they unnecessarily overcomplicated formulas, but didn't have practically any impact on the final result. But, if this approximation may cause a serious loss of funds, it may be a valid finding.""",11
Please list any known issues and explicitly state the acceptable risks for each known issue.,Acceptable risks from issues from non-Sherlock audits must be described explicitly; please do not put links in this section. Please write “Any risk is acceptable” if you are okay with any risks. ,12
We will report issues where the core protocol functionality is inaccessible for at least 7 days. Would you like to override this value?,"The default value is suitable for most contests, and in case such a DoS would cause some more serious implications, the issue will be raised nevertheless (for example, if there would be a 2-day window for executing some critical action, but a 3-day DoS is possible).",13
Please provide links to previous audits (if any).,"Please note that listing the audits here only provides context to Watsons and doesn't invalidate findings acknowledged in these audits, unless the past audit was Sherlock's, the issue was marked ""Won't fix"" and this is an Update Contest of that codebase.",14
Please list any relevant protocol resources.,"Feel free to link the docs, whitepaper, and the website for Watsons to gather context on the audit.",15
Additional audit information.,"If you'd like to modify Sherlock's rules or specify what areas would you like Watsons to look into, this is a perfect place to do so.
In case you forked any contracts, please provide a diff from the original ones. You can also provide a diff of the contracts after your last audit(s). This will direct Watsons' focus on the least battle-tested parts.",16
